# Generated by Django 3.2.13 on 2022-08-02 01:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Claim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('type', models.CharField(choices=[('ANS', 'Ans'), ('PRO', 'Pro'), ('CON', 'Con')], default='ANS', max_length=3)),
                ('open_ended', models.BooleanField(default=False)),
                ('top_relation', models.IntegerField(default=0)),
                ('up_votes', models.IntegerField(default=0)),
                ('down_votes', models.IntegerField(default=0)),
                ('pvalue', models.FloatField(default=0)),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('pvalue', '-time_created'),
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('name', models.CharField(max_length=120, primary_key=True, serialize=False)),
                ('number_used', models.IntegerField(default=1)),
            ],
            options={
                'ordering': ('-number_used', 'name'),
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(default=1)),
                ('claim', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='conversations.claim')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120)),
                ('question', models.TextField()),
                ('open_ended', models.BooleanField(default=False)),
                ('claim_number', models.IntegerField(default=0)),
                ('votes', models.IntegerField(default=0)),
                ('participant_number', models.IntegerField(default=0)),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(blank=True, to='conversations.Tag')),
            ],
            options={
                'ordering': ('-time_created',),
            },
        ),
        migrations.AddField(
            model_name='claim',
            name='conversation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='claims', to='conversations.conversation'),
        ),
        migrations.AddField(
            model_name='claim',
            name='parent',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='conversations.claim'),
        ),
        migrations.AddField(
            model_name='claim',
            name='root_claim',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='descendants', to='conversations.claim'),
        ),
        migrations.AddField(
            model_name='claim',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='claim_tags', to='conversations.Tag'),
        ),
        migrations.AddConstraint(
            model_name='vote',
            constraint=models.UniqueConstraint(fields=('user', 'claim'), name='unique_user_vote'),
        ),
        migrations.AddConstraint(
            model_name='claim',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('open_ended', True), ('parent__isnull', True), ('root_claim__isnull', True), ('top_relation', 0), ('type', 'ANS')), models.Q(('open_ended', True), ('parent__isnull', False), ('root_claim__isnull', False), ('top_relation__in', [-1, 1]), ('type__in', ['CON', 'PRO'])), models.Q(('open_ended', False), ('parent__isnull', False), ('root_claim__isnull', True), ('top_relation__in', [-1, 1]), ('type__in', ['CON', 'PRO'])), models.Q(('open_ended', False), ('parent__isnull', True), ('root_claim__isnull', True), ('top_relation', 1), ('type', 'PRO')), models.Q(('open_ended', False), ('parent__isnull', True), ('root_claim__isnull', True), ('top_relation', -1), ('type', 'CON')), _connector='OR'), name='check_claim_constraints'),
        ),
    ]
